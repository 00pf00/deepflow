syntax = "proto2";

package diagnose;
option go_package = "diagnose";

service Diagnose {
    // TOPOLOGY
    rpc GetOvsBridges(DiagnoseRequest) returns (DiagnoseResponse) {} // ovs-vsctl -f csv -d bare list bridge
    rpc GetOvsPorts(DiagnoseRequest) returns (DiagnoseResponse) {} // ovs-vsctl -f csv -d bare list port
    rpc GetOvsInterfaces(DiagnoseRequest) returns (DiagnoseResponse) {} // ovs-vsctl -f csv -d bare list interface
    rpc GetVeths(DiagnoseRequest) returns (DiagnoseResponse) {} // ip link show type veth
    rpc GetIpAddress(DiagnoseRequest) returns (DiagnoseResponse) {} // ip address show
    rpc GetAllVmXml(DiagnoseRequest) returns (DiagnoseResponse) {} // virsh list --all --uuid | xargs virsh dumpxml
    rpc GetBridgeMapping(DiagnoseRequest) returns (DiagnoseResponse) {} // grep "^bridge_mappings" /etc/neutron/plugins/ml2/openvswitch.agent.ini

    // ACL
    rpc GetIptablesAcls(DiagnoseRequest) returns (DiagnoseResponse) {} // iptables -w 1 -vnL --line-numbers -x

    // FLOW
    rpc GetOvsBridgeFlow(DiagnoseRequest) returns (DiagnoseResponse) {} //ovs-ofctl dump-flows $br
}

message DiagnoseRequest {
    optional string arg = 1;
}

message DiagnoseResponse {
    optional string result = 1;
}

syntax = "proto2";

package diagnose;
option go_package = "diagnose";

service Diagnose {
    // TOPOLOGY
    rpc GetOvsBridges(DiagnoseReqeust) returns (DiagnoseResponse) {} // ovs-vsctl -f csv -d bare list bridge
    rpc GetOvsPorts(DiagnoseReqeust) returns (DiagnoseResponse) {} // ovs-vsctl -f csv -d bare list port
    rpc GetOvsInterfaces(DiagnoseReqeust) returns (DiagnoseResponse) {} // ovs-vsctl -f csv -d bare list interface
    rpc GetVeths(DiagnoseReqeust) returns (DiagnoseResponse) {} // ip link show type veth
    rpc GetIpAddress(DiagnoseReqeust) returns (DiagnoseResponse) {} // ip address show

    // ACL
    rpc GetIptablesAcls(DiagnoseReqeust) returns (DiagnoseResponse) {} // iptables -w 1 -vnL --line-numbers -x

    // FLOW
    rpc GetOvsBridgeFlow(DiagnoseReqeust) returns (DiagnoseResponse) {} //ovs-ofctl dump-flows $br
}

message DiagnoseReqeust {
    optional string arg = 1;
}

message DiagnoseResponse {
    optional string result = 1;
}

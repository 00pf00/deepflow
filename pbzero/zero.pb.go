// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zero.proto

package pbzero // import "gitlab.x.lan/yunshan/message/pbzero"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DeviceType int32

const (
	DeviceType_VM          DeviceType = 1
	DeviceType_THIRD_PARTY DeviceType = 3
	DeviceType_VGATEWAY    DeviceType = 5
	DeviceType_HOST        DeviceType = 6
	DeviceType_NETWORK     DeviceType = 7
	DeviceType_FLOATING_IP DeviceType = 8
	DeviceType_DHCP        DeviceType = 9
)

var DeviceType_name = map[int32]string{
	1: "VM",
	3: "THIRD_PARTY",
	5: "VGATEWAY",
	6: "HOST",
	7: "NETWORK",
	8: "FLOATING_IP",
	9: "DHCP",
}
var DeviceType_value = map[string]int32{
	"VM":          1,
	"THIRD_PARTY": 3,
	"VGATEWAY":    5,
	"HOST":        6,
	"NETWORK":     7,
	"FLOATING_IP": 8,
	"DHCP":        9,
}

func (x DeviceType) Enum() *DeviceType {
	p := new(DeviceType)
	*p = x
	return p
}
func (x DeviceType) String() string {
	return proto.EnumName(DeviceType_name, int32(x))
}
func (x *DeviceType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DeviceType_value, data, "DeviceType")
	if err != nil {
		return err
	}
	*x = DeviceType(value)
	return nil
}
func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_zero_2a5bb8a104a0517d, []int{0}
}

type Direction int32

const (
	Direction_CLIENT_TO_SERVER Direction = 0
	Direction_SERVER_TO_CLIENT Direction = 1
	Direction_ANY              Direction = 2
)

var Direction_name = map[int32]string{
	0: "CLIENT_TO_SERVER",
	1: "SERVER_TO_CLIENT",
	2: "ANY",
}
var Direction_value = map[string]int32{
	"CLIENT_TO_SERVER": 0,
	"SERVER_TO_CLIENT": 1,
	"ANY":              2,
}

func (x Direction) Enum() *Direction {
	p := new(Direction)
	*p = x
	return p
}
func (x Direction) String() string {
	return proto.EnumName(Direction_name, int32(x))
}
func (x *Direction) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Direction_value, data, "Direction")
	if err != nil {
		return err
	}
	*x = Direction(value)
	return nil
}
func (Direction) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_zero_2a5bb8a104a0517d, []int{1}
}

type PolicyType int32

const (
	PolicyType_CUSTOM_TAG PolicyType = 0
	PolicyType_WHITELIST  PolicyType = 1
)

var PolicyType_name = map[int32]string{
	0: "CUSTOM_TAG",
	1: "WHITELIST",
}
var PolicyType_value = map[string]int32{
	"CUSTOM_TAG": 0,
	"WHITELIST":  1,
}

func (x PolicyType) Enum() *PolicyType {
	p := new(PolicyType)
	*p = x
	return p
}
func (x PolicyType) String() string {
	return proto.EnumName(PolicyType_name, int32(x))
}
func (x *PolicyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PolicyType_value, data, "PolicyType")
	if err != nil {
		return err
	}
	*x = PolicyType(value)
	return nil
}
func (PolicyType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_zero_2a5bb8a104a0517d, []int{2}
}

type TapType int32

const (
	TapType_OVS   TapType = 0
	TapType_ISP   TapType = 1
	TapType_SPINE TapType = 2
	TapType_TOR   TapType = 3
)

var TapType_name = map[int32]string{
	0: "OVS",
	1: "ISP",
	2: "SPINE",
	3: "TOR",
}
var TapType_value = map[string]int32{
	"OVS":   0,
	"ISP":   1,
	"SPINE": 2,
	"TOR":   3,
}

func (x TapType) Enum() *TapType {
	p := new(TapType)
	*p = x
	return p
}
func (x TapType) String() string {
	return proto.EnumName(TapType_name, int32(x))
}
func (x *TapType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TapType_value, data, "TapType")
	if err != nil {
		return err
	}
	*x = TapType(value)
	return nil
}
func (TapType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_zero_2a5bb8a104a0517d, []int{3}
}

type Tag struct {
	Id                   *string     `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Code                 *uint64     `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	Ip                   *string     `protobuf:"bytes,4,opt,name=ip" json:"ip,omitempty"`
	Mac                  *string     `protobuf:"bytes,5,opt,name=mac" json:"mac,omitempty"`
	GroupId              *uint32     `protobuf:"varint,6,opt,name=group_id" json:"group_id,omitempty"`
	L2EpcId              *int32      `protobuf:"varint,7,opt,name=l2_epc_id" json:"l2_epc_id,omitempty"`
	L3EpcId              *int32      `protobuf:"varint,8,opt,name=l3_epc_id" json:"l3_epc_id,omitempty"`
	L2DeviceId           *uint32     `protobuf:"varint,9,opt,name=l2_device_id" json:"l2_device_id,omitempty"`
	L2DeviceType         *DeviceType `protobuf:"varint,10,opt,name=l2_device_type,enum=DeviceType" json:"l2_device_type,omitempty"`
	L3DeviceId           *uint32     `protobuf:"varint,11,opt,name=l3_device_id" json:"l3_device_id,omitempty"`
	L3DeviceType         *DeviceType `protobuf:"varint,12,opt,name=l3_device_type,enum=DeviceType" json:"l3_device_type,omitempty"`
	Ip_0                 *string     `protobuf:"bytes,16,opt,name=ip_0" json:"ip_0,omitempty"`
	Ip_1                 *string     `protobuf:"bytes,17,opt,name=ip_1" json:"ip_1,omitempty"`
	Mac_0                *string     `protobuf:"bytes,18,opt,name=mac_0" json:"mac_0,omitempty"`
	Mac_1                *string     `protobuf:"bytes,19,opt,name=mac_1" json:"mac_1,omitempty"`
	GroupId_0            *uint32     `protobuf:"varint,20,opt,name=group_id_0" json:"group_id_0,omitempty"`
	GroupId_1            *uint32     `protobuf:"varint,21,opt,name=group_id_1" json:"group_id_1,omitempty"`
	L2EpcId_0            *int32      `protobuf:"varint,22,opt,name=l2_epc_id_0" json:"l2_epc_id_0,omitempty"`
	L2EpcId_1            *int32      `protobuf:"varint,23,opt,name=l2_epc_id_1" json:"l2_epc_id_1,omitempty"`
	L3EpcId_0            *int32      `protobuf:"varint,24,opt,name=l3_epc_id_0" json:"l3_epc_id_0,omitempty"`
	L3EpcId_1            *int32      `protobuf:"varint,25,opt,name=l3_epc_id_1" json:"l3_epc_id_1,omitempty"`
	L2DeviceId_0         *uint32     `protobuf:"varint,26,opt,name=l2_device_id_0" json:"l2_device_id_0,omitempty"`
	L2DeviceType_0       *DeviceType `protobuf:"varint,27,opt,name=l2_device_type_0,enum=DeviceType" json:"l2_device_type_0,omitempty"`
	L2DeviceId_1         *uint32     `protobuf:"varint,28,opt,name=l2_device_id_1" json:"l2_device_id_1,omitempty"`
	L2DeviceType_1       *DeviceType `protobuf:"varint,29,opt,name=l2_device_type_1,enum=DeviceType" json:"l2_device_type_1,omitempty"`
	L3DeviceId_0         *uint32     `protobuf:"varint,30,opt,name=l3_device_id_0" json:"l3_device_id_0,omitempty"`
	L3DeviceType_0       *DeviceType `protobuf:"varint,31,opt,name=l3_device_type_0,enum=DeviceType" json:"l3_device_type_0,omitempty"`
	L3DeviceId_1         *uint32     `protobuf:"varint,32,opt,name=l3_device_id_1" json:"l3_device_id_1,omitempty"`
	L3DeviceType_1       *DeviceType `protobuf:"varint,33,opt,name=l3_device_type_1,enum=DeviceType" json:"l3_device_type_1,omitempty"`
	Direction            *Direction  `protobuf:"varint,40,opt,name=direction,enum=Direction" json:"direction,omitempty"`
	PolicyId             *uint32     `protobuf:"varint,41,opt,name=policy_id" json:"policy_id,omitempty"`
	PolicyType           *PolicyType `protobuf:"varint,42,opt,name=policy_type,enum=PolicyType" json:"policy_type,omitempty"`
	VlanId               *uint32     `protobuf:"varint,43,opt,name=vlan_id" json:"vlan_id,omitempty"`
	Protocol             *uint32     `protobuf:"varint,44,opt,name=protocol" json:"protocol,omitempty"`
	ServerPort           *uint32     `protobuf:"varint,45,opt,name=server_port" json:"server_port,omitempty"`
	Host                 *string     `protobuf:"bytes,46,opt,name=host" json:"host,omitempty"`
	Vtap                 *string     `protobuf:"bytes,47,opt,name=vtap" json:"vtap,omitempty"`
	TapType              *TapType    `protobuf:"varint,48,opt,name=tap_type,enum=TapType" json:"tap_type,omitempty"`
	SubnetId             *uint32     `protobuf:"varint,49,opt,name=subnet_id" json:"subnet_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Tag) Reset()         { *m = Tag{} }
func (m *Tag) String() string { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()    {}
func (*Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_zero_2a5bb8a104a0517d, []int{0}
}
func (m *Tag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tag.Unmarshal(m, b)
}
func (m *Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tag.Marshal(b, m, deterministic)
}
func (dst *Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tag.Merge(dst, src)
}
func (m *Tag) XXX_Size() int {
	return xxx_messageInfo_Tag.Size(m)
}
func (m *Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_Tag proto.InternalMessageInfo

func (m *Tag) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Tag) GetCode() uint64 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *Tag) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *Tag) GetMac() string {
	if m != nil && m.Mac != nil {
		return *m.Mac
	}
	return ""
}

func (m *Tag) GetGroupId() uint32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

func (m *Tag) GetL2EpcId() int32 {
	if m != nil && m.L2EpcId != nil {
		return *m.L2EpcId
	}
	return 0
}

func (m *Tag) GetL3EpcId() int32 {
	if m != nil && m.L3EpcId != nil {
		return *m.L3EpcId
	}
	return 0
}

func (m *Tag) GetL2DeviceId() uint32 {
	if m != nil && m.L2DeviceId != nil {
		return *m.L2DeviceId
	}
	return 0
}

func (m *Tag) GetL2DeviceType() DeviceType {
	if m != nil && m.L2DeviceType != nil {
		return *m.L2DeviceType
	}
	return DeviceType_VM
}

func (m *Tag) GetL3DeviceId() uint32 {
	if m != nil && m.L3DeviceId != nil {
		return *m.L3DeviceId
	}
	return 0
}

func (m *Tag) GetL3DeviceType() DeviceType {
	if m != nil && m.L3DeviceType != nil {
		return *m.L3DeviceType
	}
	return DeviceType_VM
}

func (m *Tag) GetIp_0() string {
	if m != nil && m.Ip_0 != nil {
		return *m.Ip_0
	}
	return ""
}

func (m *Tag) GetIp_1() string {
	if m != nil && m.Ip_1 != nil {
		return *m.Ip_1
	}
	return ""
}

func (m *Tag) GetMac_0() string {
	if m != nil && m.Mac_0 != nil {
		return *m.Mac_0
	}
	return ""
}

func (m *Tag) GetMac_1() string {
	if m != nil && m.Mac_1 != nil {
		return *m.Mac_1
	}
	return ""
}

func (m *Tag) GetGroupId_0() uint32 {
	if m != nil && m.GroupId_0 != nil {
		return *m.GroupId_0
	}
	return 0
}

func (m *Tag) GetGroupId_1() uint32 {
	if m != nil && m.GroupId_1 != nil {
		return *m.GroupId_1
	}
	return 0
}

func (m *Tag) GetL2EpcId_0() int32 {
	if m != nil && m.L2EpcId_0 != nil {
		return *m.L2EpcId_0
	}
	return 0
}

func (m *Tag) GetL2EpcId_1() int32 {
	if m != nil && m.L2EpcId_1 != nil {
		return *m.L2EpcId_1
	}
	return 0
}

func (m *Tag) GetL3EpcId_0() int32 {
	if m != nil && m.L3EpcId_0 != nil {
		return *m.L3EpcId_0
	}
	return 0
}

func (m *Tag) GetL3EpcId_1() int32 {
	if m != nil && m.L3EpcId_1 != nil {
		return *m.L3EpcId_1
	}
	return 0
}

func (m *Tag) GetL2DeviceId_0() uint32 {
	if m != nil && m.L2DeviceId_0 != nil {
		return *m.L2DeviceId_0
	}
	return 0
}

func (m *Tag) GetL2DeviceType_0() DeviceType {
	if m != nil && m.L2DeviceType_0 != nil {
		return *m.L2DeviceType_0
	}
	return DeviceType_VM
}

func (m *Tag) GetL2DeviceId_1() uint32 {
	if m != nil && m.L2DeviceId_1 != nil {
		return *m.L2DeviceId_1
	}
	return 0
}

func (m *Tag) GetL2DeviceType_1() DeviceType {
	if m != nil && m.L2DeviceType_1 != nil {
		return *m.L2DeviceType_1
	}
	return DeviceType_VM
}

func (m *Tag) GetL3DeviceId_0() uint32 {
	if m != nil && m.L3DeviceId_0 != nil {
		return *m.L3DeviceId_0
	}
	return 0
}

func (m *Tag) GetL3DeviceType_0() DeviceType {
	if m != nil && m.L3DeviceType_0 != nil {
		return *m.L3DeviceType_0
	}
	return DeviceType_VM
}

func (m *Tag) GetL3DeviceId_1() uint32 {
	if m != nil && m.L3DeviceId_1 != nil {
		return *m.L3DeviceId_1
	}
	return 0
}

func (m *Tag) GetL3DeviceType_1() DeviceType {
	if m != nil && m.L3DeviceType_1 != nil {
		return *m.L3DeviceType_1
	}
	return DeviceType_VM
}

func (m *Tag) GetDirection() Direction {
	if m != nil && m.Direction != nil {
		return *m.Direction
	}
	return Direction_CLIENT_TO_SERVER
}

func (m *Tag) GetPolicyId() uint32 {
	if m != nil && m.PolicyId != nil {
		return *m.PolicyId
	}
	return 0
}

func (m *Tag) GetPolicyType() PolicyType {
	if m != nil && m.PolicyType != nil {
		return *m.PolicyType
	}
	return PolicyType_CUSTOM_TAG
}

func (m *Tag) GetVlanId() uint32 {
	if m != nil && m.VlanId != nil {
		return *m.VlanId
	}
	return 0
}

func (m *Tag) GetProtocol() uint32 {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return 0
}

func (m *Tag) GetServerPort() uint32 {
	if m != nil && m.ServerPort != nil {
		return *m.ServerPort
	}
	return 0
}

func (m *Tag) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *Tag) GetVtap() string {
	if m != nil && m.Vtap != nil {
		return *m.Vtap
	}
	return ""
}

func (m *Tag) GetTapType() TapType {
	if m != nil && m.TapType != nil {
		return *m.TapType
	}
	return TapType_OVS
}

func (m *Tag) GetSubnetId() uint32 {
	if m != nil && m.SubnetId != nil {
		return *m.SubnetId
	}
	return 0
}

type UsageMeterSum struct {
	PacketTx             *uint64  `protobuf:"varint,1,opt,name=packet_tx" json:"packet_tx,omitempty"`
	PacketRx             *uint64  `protobuf:"varint,2,opt,name=packet_rx" json:"packet_rx,omitempty"`
	Packet               *uint64  `protobuf:"varint,3,opt,name=packet" json:"packet,omitempty"`
	BitTx                *uint64  `protobuf:"varint,4,opt,name=bit_tx" json:"bit_tx,omitempty"`
	BitRx                *uint64  `protobuf:"varint,5,opt,name=bit_rx" json:"bit_rx,omitempty"`
	Bit                  *uint64  `protobuf:"varint,6,opt,name=bit" json:"bit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsageMeterSum) Reset()         { *m = UsageMeterSum{} }
func (m *UsageMeterSum) String() string { return proto.CompactTextString(m) }
func (*UsageMeterSum) ProtoMessage()    {}
func (*UsageMeterSum) Descriptor() ([]byte, []int) {
	return fileDescriptor_zero_2a5bb8a104a0517d, []int{1}
}
func (m *UsageMeterSum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsageMeterSum.Unmarshal(m, b)
}
func (m *UsageMeterSum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsageMeterSum.Marshal(b, m, deterministic)
}
func (dst *UsageMeterSum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsageMeterSum.Merge(dst, src)
}
func (m *UsageMeterSum) XXX_Size() int {
	return xxx_messageInfo_UsageMeterSum.Size(m)
}
func (m *UsageMeterSum) XXX_DiscardUnknown() {
	xxx_messageInfo_UsageMeterSum.DiscardUnknown(m)
}

var xxx_messageInfo_UsageMeterSum proto.InternalMessageInfo

func (m *UsageMeterSum) GetPacketTx() uint64 {
	if m != nil && m.PacketTx != nil {
		return *m.PacketTx
	}
	return 0
}

func (m *UsageMeterSum) GetPacketRx() uint64 {
	if m != nil && m.PacketRx != nil {
		return *m.PacketRx
	}
	return 0
}

func (m *UsageMeterSum) GetPacket() uint64 {
	if m != nil && m.Packet != nil {
		return *m.Packet
	}
	return 0
}

func (m *UsageMeterSum) GetBitTx() uint64 {
	if m != nil && m.BitTx != nil {
		return *m.BitTx
	}
	return 0
}

func (m *UsageMeterSum) GetBitRx() uint64 {
	if m != nil && m.BitRx != nil {
		return *m.BitRx
	}
	return 0
}

func (m *UsageMeterSum) GetBit() uint64 {
	if m != nil && m.Bit != nil {
		return *m.Bit
	}
	return 0
}

type UsageMeterMax struct {
	PacketTx             *uint64  `protobuf:"varint,1,opt,name=packet_tx" json:"packet_tx,omitempty"`
	PacketRx             *uint64  `protobuf:"varint,2,opt,name=packet_rx" json:"packet_rx,omitempty"`
	Packet               *uint64  `protobuf:"varint,3,opt,name=packet" json:"packet,omitempty"`
	BitTx                *uint64  `protobuf:"varint,4,opt,name=bit_tx" json:"bit_tx,omitempty"`
	BitRx                *uint64  `protobuf:"varint,5,opt,name=bit_rx" json:"bit_rx,omitempty"`
	Bit                  *uint64  `protobuf:"varint,6,opt,name=bit" json:"bit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsageMeterMax) Reset()         { *m = UsageMeterMax{} }
func (m *UsageMeterMax) String() string { return proto.CompactTextString(m) }
func (*UsageMeterMax) ProtoMessage()    {}
func (*UsageMeterMax) Descriptor() ([]byte, []int) {
	return fileDescriptor_zero_2a5bb8a104a0517d, []int{2}
}
func (m *UsageMeterMax) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsageMeterMax.Unmarshal(m, b)
}
func (m *UsageMeterMax) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsageMeterMax.Marshal(b, m, deterministic)
}
func (dst *UsageMeterMax) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsageMeterMax.Merge(dst, src)
}
func (m *UsageMeterMax) XXX_Size() int {
	return xxx_messageInfo_UsageMeterMax.Size(m)
}
func (m *UsageMeterMax) XXX_DiscardUnknown() {
	xxx_messageInfo_UsageMeterMax.DiscardUnknown(m)
}

var xxx_messageInfo_UsageMeterMax proto.InternalMessageInfo

func (m *UsageMeterMax) GetPacketTx() uint64 {
	if m != nil && m.PacketTx != nil {
		return *m.PacketTx
	}
	return 0
}

func (m *UsageMeterMax) GetPacketRx() uint64 {
	if m != nil && m.PacketRx != nil {
		return *m.PacketRx
	}
	return 0
}

func (m *UsageMeterMax) GetPacket() uint64 {
	if m != nil && m.Packet != nil {
		return *m.Packet
	}
	return 0
}

func (m *UsageMeterMax) GetBitTx() uint64 {
	if m != nil && m.BitTx != nil {
		return *m.BitTx
	}
	return 0
}

func (m *UsageMeterMax) GetBitRx() uint64 {
	if m != nil && m.BitRx != nil {
		return *m.BitRx
	}
	return 0
}

func (m *UsageMeterMax) GetBit() uint64 {
	if m != nil && m.Bit != nil {
		return *m.Bit
	}
	return 0
}

type UsageMeterMin struct {
	BitTx                *uint64  `protobuf:"varint,4,opt,name=bit_tx" json:"bit_tx,omitempty"`
	BitRx                *uint64  `protobuf:"varint,5,opt,name=bit_rx" json:"bit_rx,omitempty"`
	Bit                  *uint64  `protobuf:"varint,6,opt,name=bit" json:"bit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsageMeterMin) Reset()         { *m = UsageMeterMin{} }
func (m *UsageMeterMin) String() string { return proto.CompactTextString(m) }
func (*UsageMeterMin) ProtoMessage()    {}
func (*UsageMeterMin) Descriptor() ([]byte, []int) {
	return fileDescriptor_zero_2a5bb8a104a0517d, []int{3}
}
func (m *UsageMeterMin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsageMeterMin.Unmarshal(m, b)
}
func (m *UsageMeterMin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsageMeterMin.Marshal(b, m, deterministic)
}
func (dst *UsageMeterMin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsageMeterMin.Merge(dst, src)
}
func (m *UsageMeterMin) XXX_Size() int {
	return xxx_messageInfo_UsageMeterMin.Size(m)
}
func (m *UsageMeterMin) XXX_DiscardUnknown() {
	xxx_messageInfo_UsageMeterMin.DiscardUnknown(m)
}

var xxx_messageInfo_UsageMeterMin proto.InternalMessageInfo

func (m *UsageMeterMin) GetBitTx() uint64 {
	if m != nil && m.BitTx != nil {
		return *m.BitTx
	}
	return 0
}

func (m *UsageMeterMin) GetBitRx() uint64 {
	if m != nil && m.BitRx != nil {
		return *m.BitRx
	}
	return 0
}

func (m *UsageMeterMin) GetBit() uint64 {
	if m != nil && m.Bit != nil {
		return *m.Bit
	}
	return 0
}

type UsageMeter struct {
	Sum                  *UsageMeterSum `protobuf:"bytes,1,opt,name=sum" json:"sum,omitempty"`
	Max                  *UsageMeterMax `protobuf:"bytes,2,opt,name=max" json:"max,omitempty"`
	Min                  *UsageMeterMin `protobuf:"bytes,3,opt,name=min" json:"min,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UsageMeter) Reset()         { *m = UsageMeter{} }
func (m *UsageMeter) String() string { return proto.CompactTextString(m) }
func (*UsageMeter) ProtoMessage()    {}
func (*UsageMeter) Descriptor() ([]byte, []int) {
	return fileDescriptor_zero_2a5bb8a104a0517d, []int{4}
}
func (m *UsageMeter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsageMeter.Unmarshal(m, b)
}
func (m *UsageMeter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsageMeter.Marshal(b, m, deterministic)
}
func (dst *UsageMeter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsageMeter.Merge(dst, src)
}
func (m *UsageMeter) XXX_Size() int {
	return xxx_messageInfo_UsageMeter.Size(m)
}
func (m *UsageMeter) XXX_DiscardUnknown() {
	xxx_messageInfo_UsageMeter.DiscardUnknown(m)
}

var xxx_messageInfo_UsageMeter proto.InternalMessageInfo

func (m *UsageMeter) GetSum() *UsageMeterSum {
	if m != nil {
		return m.Sum
	}
	return nil
}

func (m *UsageMeter) GetMax() *UsageMeterMax {
	if m != nil {
		return m.Max
	}
	return nil
}

func (m *UsageMeter) GetMin() *UsageMeterMin {
	if m != nil {
		return m.Min
	}
	return nil
}

type PerfMeterSum struct {
	FlowCount            *uint64  `protobuf:"varint,1,opt,name=flow_count" json:"flow_count,omitempty"`
	ClosedFlowCount      *uint64  `protobuf:"varint,2,opt,name=closed_flow_count" json:"closed_flow_count,omitempty"`
	RetransFlowCount     *uint64  `protobuf:"varint,3,opt,name=retrans_flow_count" json:"retrans_flow_count,omitempty"`
	RttSyn               *uint64  `protobuf:"varint,4,opt,name=rtt_syn" json:"rtt_syn,omitempty"`
	RttAvg               *uint64  `protobuf:"varint,5,opt,name=rtt_avg" json:"rtt_avg,omitempty"`
	RttSynFlow           *uint64  `protobuf:"varint,6,opt,name=rtt_syn_flow" json:"rtt_syn_flow,omitempty"`
	RttAvgFlow           *uint64  `protobuf:"varint,7,opt,name=rtt_avg_flow" json:"rtt_avg_flow,omitempty"`
	RttSynPerFlow        *uint64  `protobuf:"varint,8,opt,name=rtt_syn_per_flow" json:"rtt_syn_per_flow,omitempty"`
	RttAvgPerFlow        *uint64  `protobuf:"varint,9,opt,name=rtt_avg_per_flow" json:"rtt_avg_per_flow,omitempty"`
	SynRetransCntTx      *uint64  `protobuf:"varint,10,opt,name=syn_retrans_cnt_tx" json:"syn_retrans_cnt_tx,omitempty"`
	SynRetransCntRx      *uint64  `protobuf:"varint,11,opt,name=syn_retrans_cnt_rx" json:"syn_retrans_cnt_rx,omitempty"`
	SynRetransCnt        *uint64  `protobuf:"varint,12,opt,name=syn_retrans_cnt" json:"syn_retrans_cnt,omitempty"`
	RetransCntTx         *uint64  `protobuf:"varint,13,opt,name=retrans_cnt_tx" json:"retrans_cnt_tx,omitempty"`
	RetransCntRx         *uint64  `protobuf:"varint,14,opt,name=retrans_cnt_rx" json:"retrans_cnt_rx,omitempty"`
	RetransCnt           *uint64  `protobuf:"varint,15,opt,name=retrans_cnt" json:"retrans_cnt,omitempty"`
	ZeroWndCntTx         *uint64  `protobuf:"varint,16,opt,name=zero_wnd_cnt_tx" json:"zero_wnd_cnt_tx,omitempty"`
	ZeroWndCntRx         *uint64  `protobuf:"varint,17,opt,name=zero_wnd_cnt_rx" json:"zero_wnd_cnt_rx,omitempty"`
	ZeroWndCnt           *uint64  `protobuf:"varint,18,opt,name=zero_wnd_cnt" json:"zero_wnd_cnt,omitempty"`
	SlowStartCntTx       *uint64  `protobuf:"varint,19,opt,name=slow_start_cnt_tx" json:"slow_start_cnt_tx,omitempty"`
	SlowStartCntRx       *uint64  `protobuf:"varint,20,opt,name=slow_start_cnt_rx" json:"slow_start_cnt_rx,omitempty"`
	SlowStartCnt         *uint64  `protobuf:"varint,21,opt,name=slow_start_cnt" json:"slow_start_cnt,omitempty"`
	PshUrgCntTx          *uint64  `protobuf:"varint,22,opt,name=psh_urg_cnt_tx" json:"psh_urg_cnt_tx,omitempty"`
	PshUrgCntRx          *uint64  `protobuf:"varint,23,opt,name=psh_urg_cnt_rx" json:"psh_urg_cnt_rx,omitempty"`
	PshUrgCnt            *uint64  `protobuf:"varint,24,opt,name=psh_urg_cnt" json:"psh_urg_cnt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerfMeterSum) Reset()         { *m = PerfMeterSum{} }
func (m *PerfMeterSum) String() string { return proto.CompactTextString(m) }
func (*PerfMeterSum) ProtoMessage()    {}
func (*PerfMeterSum) Descriptor() ([]byte, []int) {
	return fileDescriptor_zero_2a5bb8a104a0517d, []int{5}
}
func (m *PerfMeterSum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerfMeterSum.Unmarshal(m, b)
}
func (m *PerfMeterSum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerfMeterSum.Marshal(b, m, deterministic)
}
func (dst *PerfMeterSum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerfMeterSum.Merge(dst, src)
}
func (m *PerfMeterSum) XXX_Size() int {
	return xxx_messageInfo_PerfMeterSum.Size(m)
}
func (m *PerfMeterSum) XXX_DiscardUnknown() {
	xxx_messageInfo_PerfMeterSum.DiscardUnknown(m)
}

var xxx_messageInfo_PerfMeterSum proto.InternalMessageInfo

func (m *PerfMeterSum) GetFlowCount() uint64 {
	if m != nil && m.FlowCount != nil {
		return *m.FlowCount
	}
	return 0
}

func (m *PerfMeterSum) GetClosedFlowCount() uint64 {
	if m != nil && m.ClosedFlowCount != nil {
		return *m.ClosedFlowCount
	}
	return 0
}

func (m *PerfMeterSum) GetRetransFlowCount() uint64 {
	if m != nil && m.RetransFlowCount != nil {
		return *m.RetransFlowCount
	}
	return 0
}

func (m *PerfMeterSum) GetRttSyn() uint64 {
	if m != nil && m.RttSyn != nil {
		return *m.RttSyn
	}
	return 0
}

func (m *PerfMeterSum) GetRttAvg() uint64 {
	if m != nil && m.RttAvg != nil {
		return *m.RttAvg
	}
	return 0
}

func (m *PerfMeterSum) GetRttSynFlow() uint64 {
	if m != nil && m.RttSynFlow != nil {
		return *m.RttSynFlow
	}
	return 0
}

func (m *PerfMeterSum) GetRttAvgFlow() uint64 {
	if m != nil && m.RttAvgFlow != nil {
		return *m.RttAvgFlow
	}
	return 0
}

func (m *PerfMeterSum) GetRttSynPerFlow() uint64 {
	if m != nil && m.RttSynPerFlow != nil {
		return *m.RttSynPerFlow
	}
	return 0
}

func (m *PerfMeterSum) GetRttAvgPerFlow() uint64 {
	if m != nil && m.RttAvgPerFlow != nil {
		return *m.RttAvgPerFlow
	}
	return 0
}

func (m *PerfMeterSum) GetSynRetransCntTx() uint64 {
	if m != nil && m.SynRetransCntTx != nil {
		return *m.SynRetransCntTx
	}
	return 0
}

func (m *PerfMeterSum) GetSynRetransCntRx() uint64 {
	if m != nil && m.SynRetransCntRx != nil {
		return *m.SynRetransCntRx
	}
	return 0
}

func (m *PerfMeterSum) GetSynRetransCnt() uint64 {
	if m != nil && m.SynRetransCnt != nil {
		return *m.SynRetransCnt
	}
	return 0
}

func (m *PerfMeterSum) GetRetransCntTx() uint64 {
	if m != nil && m.RetransCntTx != nil {
		return *m.RetransCntTx
	}
	return 0
}

func (m *PerfMeterSum) GetRetransCntRx() uint64 {
	if m != nil && m.RetransCntRx != nil {
		return *m.RetransCntRx
	}
	return 0
}

func (m *PerfMeterSum) GetRetransCnt() uint64 {
	if m != nil && m.RetransCnt != nil {
		return *m.RetransCnt
	}
	return 0
}

func (m *PerfMeterSum) GetZeroWndCntTx() uint64 {
	if m != nil && m.ZeroWndCntTx != nil {
		return *m.ZeroWndCntTx
	}
	return 0
}

func (m *PerfMeterSum) GetZeroWndCntRx() uint64 {
	if m != nil && m.ZeroWndCntRx != nil {
		return *m.ZeroWndCntRx
	}
	return 0
}

func (m *PerfMeterSum) GetZeroWndCnt() uint64 {
	if m != nil && m.ZeroWndCnt != nil {
		return *m.ZeroWndCnt
	}
	return 0
}

func (m *PerfMeterSum) GetSlowStartCntTx() uint64 {
	if m != nil && m.SlowStartCntTx != nil {
		return *m.SlowStartCntTx
	}
	return 0
}

func (m *PerfMeterSum) GetSlowStartCntRx() uint64 {
	if m != nil && m.SlowStartCntRx != nil {
		return *m.SlowStartCntRx
	}
	return 0
}

func (m *PerfMeterSum) GetSlowStartCnt() uint64 {
	if m != nil && m.SlowStartCnt != nil {
		return *m.SlowStartCnt
	}
	return 0
}

func (m *PerfMeterSum) GetPshUrgCntTx() uint64 {
	if m != nil && m.PshUrgCntTx != nil {
		return *m.PshUrgCntTx
	}
	return 0
}

func (m *PerfMeterSum) GetPshUrgCntRx() uint64 {
	if m != nil && m.PshUrgCntRx != nil {
		return *m.PshUrgCntRx
	}
	return 0
}

func (m *PerfMeterSum) GetPshUrgCnt() uint64 {
	if m != nil && m.PshUrgCnt != nil {
		return *m.PshUrgCnt
	}
	return 0
}

type PerfMeterMax struct {
	FlowCount            *uint64  `protobuf:"varint,1,opt,name=flow_count" json:"flow_count,omitempty"`
	ClosedFlowCount      *uint64  `protobuf:"varint,2,opt,name=closed_flow_count" json:"closed_flow_count,omitempty"`
	RttSyn               *uint64  `protobuf:"varint,3,opt,name=rtt_syn" json:"rtt_syn,omitempty"`
	RttAvg               *uint64  `protobuf:"varint,4,opt,name=rtt_avg" json:"rtt_avg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerfMeterMax) Reset()         { *m = PerfMeterMax{} }
func (m *PerfMeterMax) String() string { return proto.CompactTextString(m) }
func (*PerfMeterMax) ProtoMessage()    {}
func (*PerfMeterMax) Descriptor() ([]byte, []int) {
	return fileDescriptor_zero_2a5bb8a104a0517d, []int{6}
}
func (m *PerfMeterMax) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerfMeterMax.Unmarshal(m, b)
}
func (m *PerfMeterMax) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerfMeterMax.Marshal(b, m, deterministic)
}
func (dst *PerfMeterMax) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerfMeterMax.Merge(dst, src)
}
func (m *PerfMeterMax) XXX_Size() int {
	return xxx_messageInfo_PerfMeterMax.Size(m)
}
func (m *PerfMeterMax) XXX_DiscardUnknown() {
	xxx_messageInfo_PerfMeterMax.DiscardUnknown(m)
}

var xxx_messageInfo_PerfMeterMax proto.InternalMessageInfo

func (m *PerfMeterMax) GetFlowCount() uint64 {
	if m != nil && m.FlowCount != nil {
		return *m.FlowCount
	}
	return 0
}

func (m *PerfMeterMax) GetClosedFlowCount() uint64 {
	if m != nil && m.ClosedFlowCount != nil {
		return *m.ClosedFlowCount
	}
	return 0
}

func (m *PerfMeterMax) GetRttSyn() uint64 {
	if m != nil && m.RttSyn != nil {
		return *m.RttSyn
	}
	return 0
}

func (m *PerfMeterMax) GetRttAvg() uint64 {
	if m != nil && m.RttAvg != nil {
		return *m.RttAvg
	}
	return 0
}

type PerfMeterMin struct {
	RttSyn               *uint64  `protobuf:"varint,1,opt,name=rtt_syn" json:"rtt_syn,omitempty"`
	RttAvg               *uint64  `protobuf:"varint,2,opt,name=rtt_avg" json:"rtt_avg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PerfMeterMin) Reset()         { *m = PerfMeterMin{} }
func (m *PerfMeterMin) String() string { return proto.CompactTextString(m) }
func (*PerfMeterMin) ProtoMessage()    {}
func (*PerfMeterMin) Descriptor() ([]byte, []int) {
	return fileDescriptor_zero_2a5bb8a104a0517d, []int{7}
}
func (m *PerfMeterMin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerfMeterMin.Unmarshal(m, b)
}
func (m *PerfMeterMin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerfMeterMin.Marshal(b, m, deterministic)
}
func (dst *PerfMeterMin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerfMeterMin.Merge(dst, src)
}
func (m *PerfMeterMin) XXX_Size() int {
	return xxx_messageInfo_PerfMeterMin.Size(m)
}
func (m *PerfMeterMin) XXX_DiscardUnknown() {
	xxx_messageInfo_PerfMeterMin.DiscardUnknown(m)
}

var xxx_messageInfo_PerfMeterMin proto.InternalMessageInfo

func (m *PerfMeterMin) GetRttSyn() uint64 {
	if m != nil && m.RttSyn != nil {
		return *m.RttSyn
	}
	return 0
}

func (m *PerfMeterMin) GetRttAvg() uint64 {
	if m != nil && m.RttAvg != nil {
		return *m.RttAvg
	}
	return 0
}

type PerfMeter struct {
	Sum                  *PerfMeterSum `protobuf:"bytes,1,opt,name=sum" json:"sum,omitempty"`
	Max                  *PerfMeterMax `protobuf:"bytes,2,opt,name=max" json:"max,omitempty"`
	Min                  *PerfMeterMin `protobuf:"bytes,3,opt,name=min" json:"min,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PerfMeter) Reset()         { *m = PerfMeter{} }
func (m *PerfMeter) String() string { return proto.CompactTextString(m) }
func (*PerfMeter) ProtoMessage()    {}
func (*PerfMeter) Descriptor() ([]byte, []int) {
	return fileDescriptor_zero_2a5bb8a104a0517d, []int{8}
}
func (m *PerfMeter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerfMeter.Unmarshal(m, b)
}
func (m *PerfMeter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerfMeter.Marshal(b, m, deterministic)
}
func (dst *PerfMeter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerfMeter.Merge(dst, src)
}
func (m *PerfMeter) XXX_Size() int {
	return xxx_messageInfo_PerfMeter.Size(m)
}
func (m *PerfMeter) XXX_DiscardUnknown() {
	xxx_messageInfo_PerfMeter.DiscardUnknown(m)
}

var xxx_messageInfo_PerfMeter proto.InternalMessageInfo

func (m *PerfMeter) GetSum() *PerfMeterSum {
	if m != nil {
		return m.Sum
	}
	return nil
}

func (m *PerfMeter) GetMax() *PerfMeterMax {
	if m != nil {
		return m.Max
	}
	return nil
}

func (m *PerfMeter) GetMin() *PerfMeterMin {
	if m != nil {
		return m.Min
	}
	return nil
}

type PerfGeoMeter struct {
	Meter                *PerfMeter `protobuf:"bytes,1,opt,name=meter" json:"meter,omitempty"`
	SumAbnormalFlowCount *uint64    `protobuf:"varint,2,opt,name=sum_abnormal_flow_count" json:"sum_abnormal_flow_count,omitempty"`
	SumDuration          *uint64    `protobuf:"varint,3,opt,name=sum_duration" json:"sum_duration,omitempty"`
	SumClosedFlowCount   *uint64    `protobuf:"varint,4,opt,name=sum_closed_flow_count" json:"sum_closed_flow_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PerfGeoMeter) Reset()         { *m = PerfGeoMeter{} }
func (m *PerfGeoMeter) String() string { return proto.CompactTextString(m) }
func (*PerfGeoMeter) ProtoMessage()    {}
func (*PerfGeoMeter) Descriptor() ([]byte, []int) {
	return fileDescriptor_zero_2a5bb8a104a0517d, []int{9}
}
func (m *PerfGeoMeter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerfGeoMeter.Unmarshal(m, b)
}
func (m *PerfGeoMeter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerfGeoMeter.Marshal(b, m, deterministic)
}
func (dst *PerfGeoMeter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerfGeoMeter.Merge(dst, src)
}
func (m *PerfGeoMeter) XXX_Size() int {
	return xxx_messageInfo_PerfGeoMeter.Size(m)
}
func (m *PerfGeoMeter) XXX_DiscardUnknown() {
	xxx_messageInfo_PerfGeoMeter.DiscardUnknown(m)
}

var xxx_messageInfo_PerfGeoMeter proto.InternalMessageInfo

func (m *PerfGeoMeter) GetMeter() *PerfMeter {
	if m != nil {
		return m.Meter
	}
	return nil
}

func (m *PerfGeoMeter) GetSumAbnormalFlowCount() uint64 {
	if m != nil && m.SumAbnormalFlowCount != nil {
		return *m.SumAbnormalFlowCount
	}
	return 0
}

func (m *PerfGeoMeter) GetSumDuration() uint64 {
	if m != nil && m.SumDuration != nil {
		return *m.SumDuration
	}
	return 0
}

func (m *PerfGeoMeter) GetSumClosedFlowCount() uint64 {
	if m != nil && m.SumClosedFlowCount != nil {
		return *m.SumClosedFlowCount
	}
	return 0
}

type PerfVisitorMeter struct {
	MeterSum             *PerfMeterSum `protobuf:"bytes,1,opt,name=meter_sum" json:"meter_sum,omitempty"`
	SumAbnormalFlowCount *uint64       `protobuf:"varint,2,opt,name=sum_abnormal_flow_count" json:"sum_abnormal_flow_count,omitempty"`
	SumDuration          *uint64       `protobuf:"varint,3,opt,name=sum_duration" json:"sum_duration,omitempty"`
	SumClosedFlowCount   *uint64       `protobuf:"varint,4,opt,name=sum_closed_flow_count" json:"sum_closed_flow_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PerfVisitorMeter) Reset()         { *m = PerfVisitorMeter{} }
func (m *PerfVisitorMeter) String() string { return proto.CompactTextString(m) }
func (*PerfVisitorMeter) ProtoMessage()    {}
func (*PerfVisitorMeter) Descriptor() ([]byte, []int) {
	return fileDescriptor_zero_2a5bb8a104a0517d, []int{10}
}
func (m *PerfVisitorMeter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerfVisitorMeter.Unmarshal(m, b)
}
func (m *PerfVisitorMeter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerfVisitorMeter.Marshal(b, m, deterministic)
}
func (dst *PerfVisitorMeter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerfVisitorMeter.Merge(dst, src)
}
func (m *PerfVisitorMeter) XXX_Size() int {
	return xxx_messageInfo_PerfVisitorMeter.Size(m)
}
func (m *PerfVisitorMeter) XXX_DiscardUnknown() {
	xxx_messageInfo_PerfVisitorMeter.DiscardUnknown(m)
}

var xxx_messageInfo_PerfVisitorMeter proto.InternalMessageInfo

func (m *PerfVisitorMeter) GetMeterSum() *PerfMeterSum {
	if m != nil {
		return m.MeterSum
	}
	return nil
}

func (m *PerfVisitorMeter) GetSumAbnormalFlowCount() uint64 {
	if m != nil && m.SumAbnormalFlowCount != nil {
		return *m.SumAbnormalFlowCount
	}
	return 0
}

func (m *PerfVisitorMeter) GetSumDuration() uint64 {
	if m != nil && m.SumDuration != nil {
		return *m.SumDuration
	}
	return 0
}

func (m *PerfVisitorMeter) GetSumClosedFlowCount() uint64 {
	if m != nil && m.SumClosedFlowCount != nil {
		return *m.SumClosedFlowCount
	}
	return 0
}

func init() {
	proto.RegisterType((*Tag)(nil), "Tag")
	proto.RegisterType((*UsageMeterSum)(nil), "UsageMeterSum")
	proto.RegisterType((*UsageMeterMax)(nil), "UsageMeterMax")
	proto.RegisterType((*UsageMeterMin)(nil), "UsageMeterMin")
	proto.RegisterType((*UsageMeter)(nil), "UsageMeter")
	proto.RegisterType((*PerfMeterSum)(nil), "PerfMeterSum")
	proto.RegisterType((*PerfMeterMax)(nil), "PerfMeterMax")
	proto.RegisterType((*PerfMeterMin)(nil), "PerfMeterMin")
	proto.RegisterType((*PerfMeter)(nil), "PerfMeter")
	proto.RegisterType((*PerfGeoMeter)(nil), "PerfGeoMeter")
	proto.RegisterType((*PerfVisitorMeter)(nil), "PerfVisitorMeter")
	proto.RegisterEnum("DeviceType", DeviceType_name, DeviceType_value)
	proto.RegisterEnum("Direction", Direction_name, Direction_value)
	proto.RegisterEnum("PolicyType", PolicyType_name, PolicyType_value)
	proto.RegisterEnum("TapType", TapType_name, TapType_value)
}

func init() { proto.RegisterFile("zero.proto", fileDescriptor_zero_2a5bb8a104a0517d) }

var fileDescriptor_zero_2a5bb8a104a0517d = []byte{
	// 1087 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xcd, 0x72, 0xe2, 0x46,
	0x10, 0x5e, 0x81, 0x30, 0xa8, 0xf9, 0xf1, 0x58, 0xf6, 0xae, 0xc7, 0x38, 0xce, 0x12, 0xb6, 0xb6,
	0x8a, 0x78, 0x13, 0x0c, 0xe6, 0x9a, 0x43, 0x88, 0x4d, 0x6c, 0x2a, 0xb6, 0xa1, 0x40, 0x6b, 0x97,
	0x73, 0x99, 0x12, 0x42, 0x8b, 0x55, 0x01, 0x49, 0x35, 0x12, 0x2c, 0xce, 0x25, 0xf7, 0x3c, 0x5b,
	0xde, 0x25, 0xaf, 0x90, 0x9a, 0x16, 0xc2, 0x03, 0xd8, 0x95, 0xda, 0x43, 0x72, 0xd3, 0x7c, 0xdf,
	0x7c, 0xfd, 0xa7, 0xee, 0x1e, 0x80, 0xdf, 0x6d, 0xee, 0x55, 0x7d, 0xee, 0x85, 0x5e, 0xf9, 0xef,
	0x2d, 0x48, 0x1a, 0xe6, 0x48, 0x07, 0x48, 0x38, 0x43, 0xaa, 0x94, 0x94, 0x8a, 0xa6, 0xe7, 0x40,
	0xb5, 0xbc, 0xa1, 0x4d, 0x13, 0x25, 0xa5, 0xa2, 0x22, 0xe3, 0x53, 0x15, 0x99, 0x2c, 0x24, 0x27,
	0xa6, 0x45, 0x53, 0x78, 0x20, 0x90, 0x19, 0x71, 0x6f, 0xea, 0x33, 0x67, 0x48, 0xb7, 0x4a, 0x4a,
	0x25, 0xaf, 0xef, 0x80, 0x36, 0x3e, 0x65, 0xb6, 0x6f, 0x09, 0x28, 0x5d, 0x52, 0x2a, 0x29, 0x84,
	0x1a, 0x31, 0x94, 0x41, 0x68, 0x0f, 0x72, 0xe3, 0x53, 0x36, 0xb4, 0x67, 0x8e, 0x65, 0x0b, 0x54,
	0x43, 0xed, 0x3b, 0x28, 0x3c, 0xa1, 0xe1, 0xa3, 0x6f, 0x53, 0x28, 0x29, 0x95, 0xc2, 0x69, 0xb6,
	0x7a, 0x8e, 0x98, 0xf1, 0xe8, 0xdb, 0x28, 0x6d, 0x48, 0xd2, 0xec, 0x52, 0xda, 0x58, 0x91, 0xe6,
	0x36, 0xa5, 0x39, 0x50, 0x1d, 0x9f, 0xd5, 0x28, 0x89, 0x53, 0x74, 0x7c, 0x56, 0xa7, 0x3b, 0x78,
	0xca, 0x43, 0x6a, 0x62, 0x5a, 0xac, 0x46, 0x75, 0xf9, 0x58, 0xa7, 0xbb, 0x78, 0xd4, 0x01, 0xe2,
	0x3c, 0x59, 0x8d, 0xee, 0xa1, 0x4b, 0x19, 0xab, 0xd3, 0xd7, 0x88, 0xed, 0x42, 0x76, 0x99, 0x3d,
	0xab, 0xd1, 0x37, 0x98, 0xec, 0x0a, 0x58, 0xa7, 0xfb, 0x4b, 0xb0, 0xf1, 0x74, 0x93, 0x6e, 0x82,
	0x75, 0x7a, 0x80, 0xe0, 0x1b, 0xb9, 0x2a, 0x78, 0xb9, 0x88, 0xbe, 0xde, 0x03, 0x59, 0xad, 0x16,
	0xab, 0xd1, 0xc3, 0xcd, 0xa4, 0xd7, 0xe5, 0x75, 0xfa, 0xd5, 0x0b, 0xf2, 0x3a, 0x3d, 0x7a, 0x5e,
	0xde, 0x58, 0xf1, 0xfe, 0xf5, 0x52, 0xde, 0x58, 0xf3, 0xfe, 0xf6, 0xdf, 0xe5, 0x75, 0x5a, 0x7a,
	0x41, 0x5e, 0xa7, 0xdf, 0x6c, 0xca, 0x8f, 0x40, 0x1b, 0x3a, 0xdc, 0xb6, 0x42, 0xc7, 0x73, 0x69,
	0x05, 0x79, 0xa8, 0x9e, 0xc7, 0x88, 0xe8, 0x2c, 0xdf, 0x1b, 0x3b, 0xd6, 0xa3, 0x68, 0x84, 0x6f,
	0xd1, 0x70, 0x09, 0xb2, 0x0b, 0x08, 0xbb, 0xe0, 0x78, 0x61, 0xb3, 0x8b, 0x18, 0xda, 0xdc, 0x86,
	0xf4, 0x6c, 0x6c, 0xba, 0x42, 0xf2, 0x01, 0x25, 0x04, 0x32, 0x38, 0x08, 0x96, 0x37, 0xa6, 0xdf,
	0xc5, 0xbf, 0x31, 0xb0, 0xf9, 0xcc, 0xe6, 0xcc, 0xf7, 0x78, 0x48, 0xbf, 0x47, 0x30, 0x07, 0xea,
	0x83, 0x17, 0x84, 0xb4, 0x1a, 0x77, 0xcf, 0x2c, 0x34, 0x7d, 0x7a, 0x82, 0xa7, 0x22, 0x64, 0x42,
	0xd3, 0x8f, 0x5c, 0xd6, 0xd0, 0x65, 0xa6, 0x6a, 0x98, 0x3e, 0xfa, 0xdb, 0x01, 0x2d, 0x98, 0x0e,
	0x5c, 0x3b, 0x14, 0x1e, 0xeb, 0xc2, 0x54, 0x99, 0x43, 0xfe, 0x63, 0x60, 0x8e, 0xec, 0x6b, 0x3b,
	0xb4, 0x79, 0x7f, 0x3a, 0xc1, 0x44, 0x4c, 0xeb, 0x37, 0x3b, 0x64, 0xe1, 0x1c, 0x27, 0x50, 0x95,
	0x20, 0x3e, 0x5f, 0x8c, 0x61, 0x01, 0xb6, 0x22, 0x88, 0x26, 0xe3, 0xf3, 0xc0, 0x41, 0x89, 0x2a,
	0x9f, 0xf9, 0x1c, 0xa7, 0x53, 0x15, 0xa3, 0x3a, 0x70, 0x42, 0x1c, 0x4c, 0x75, 0xd5, 0xe7, 0xb5,
	0x39, 0xff, 0x3f, 0x7c, 0xfe, 0xb0, 0xe2, 0xd3, 0x71, 0xbf, 0x4c, 0x6d, 0x01, 0x3c, 0xa9, 0xf5,
	0x43, 0x48, 0x06, 0xd3, 0x09, 0x06, 0x9a, 0x3d, 0x2d, 0x54, 0x57, 0xeb, 0x77, 0x28, 0x96, 0x52,
	0x14, 0xf2, 0x2a, 0x29, 0x12, 0x15, 0xa4, 0xe3, 0x62, 0xfc, 0x6b, 0xa4, 0xe3, 0x96, 0xff, 0x52,
	0x21, 0xd7, 0xb5, 0xf9, 0xa7, 0xa5, 0x29, 0x1d, 0xe0, 0xd3, 0xd8, 0xfb, 0xcc, 0x2c, 0x6f, 0xea,
	0x86, 0x8b, 0xba, 0x1c, 0xc0, 0x8e, 0x35, 0xf6, 0x02, 0x7b, 0xc8, 0x24, 0x2a, 0xaa, 0x4f, 0x11,
	0x74, 0x6e, 0x87, 0xdc, 0x74, 0x03, 0x99, 0x8b, 0x6a, 0xb5, 0x0d, 0x69, 0x1e, 0x86, 0x2c, 0x78,
	0x74, 0x17, 0xe9, 0x2e, 0x00, 0x73, 0x36, 0x5a, 0xe4, 0xbb, 0x07, 0xb9, 0xc5, 0x0d, 0x54, 0x47,
	0x89, 0xc7, 0xa8, 0x39, 0x1b, 0x45, 0x68, 0x1a, 0x51, 0x0a, 0x24, 0xbe, 0xeb, 0xdb, 0x3c, 0x62,
	0x32, 0x32, 0x23, 0xee, 0x2f, 0x19, 0x2d, 0x8e, 0x4e, 0xdc, 0x8f, 0x23, 0xb4, 0x5c, 0xac, 0x3d,
	0xbc, 0xc4, 0xf1, 0x39, 0xae, 0x53, 0x55, 0xdf, 0x87, 0xed, 0x35, 0x0e, 0xf7, 0xa9, 0x2a, 0xe6,
	0x79, 0xcd, 0x58, 0xfe, 0x39, 0x9c, 0xcf, 0x69, 0x01, 0xf1, 0x5d, 0xc8, 0xca, 0x46, 0xb6, 0x63,
	0xeb, 0xe2, 0xf9, 0x61, 0x9f, 0xdd, 0x61, 0x6c, 0x85, 0x3c, 0x4b, 0xf0, 0x39, 0x6e, 0x67, 0xac,
	0x88, 0x4c, 0xe0, 0x92, 0xc6, 0xdf, 0x12, 0x88, 0x9a, 0x07, 0xa1, 0xc9, 0xc3, 0xd8, 0xd2, 0xee,
	0x0b, 0x14, 0x9f, 0xe3, 0xde, 0xc6, 0x50, 0x57, 0x29, 0xdc, 0xdd, 0x88, 0xfb, 0xc1, 0x03, 0x9b,
	0xf2, 0x51, 0x6c, 0xea, 0xcd, 0x73, 0x38, 0x9f, 0xe3, 0x06, 0xc7, 0xd4, 0x24, 0x1c, 0x37, 0xb8,
	0x5a, 0x66, 0x52, 0x37, 0x89, 0xde, 0xfb, 0xc2, 0x6e, 0x92, 0x3a, 0x26, 0xb9, 0xde, 0x31, 0xd8,
	0x42, 0xe5, 0x9a, 0xec, 0xc0, 0x71, 0x65, 0x85, 0xb2, 0xae, 0x48, 0x2c, 0x42, 0xd2, 0x96, 0x0a,
	0xbd, 0x28, 0x4f, 0x51, 0xbe, 0xba, 0xd2, 0xf9, 0x45, 0x79, 0x88, 0x24, 0x4e, 0xe4, 0x51, 0x94,
	0x67, 0x48, 0xe6, 0x1c, 0xb7, 0xfc, 0x47, 0x14, 0xd2, 0x85, 0xed, 0x45, 0x3e, 0x0e, 0x20, 0x35,
	0x11, 0x1f, 0x0b, 0x2f, 0xf0, 0x74, 0x5b, 0x7f, 0x0b, 0xfb, 0xc1, 0x74, 0xc2, 0xcc, 0x81, 0xeb,
	0xf1, 0x89, 0x39, 0xde, 0x2c, 0xc0, 0x1e, 0xe4, 0xc4, 0x85, 0xe1, 0x94, 0x9b, 0xb8, 0xf3, 0xa3,
	0x2a, 0x1c, 0xc1, 0x6b, 0x81, 0x6e, 0x56, 0x2d, 0xaa, 0xc9, 0x9f, 0x0a, 0x10, 0xe1, 0xe3, 0xd6,
	0x09, 0x9c, 0xd0, 0xe3, 0x91, 0xab, 0x12, 0x68, 0x18, 0x05, 0x7b, 0x31, 0xdf, 0xff, 0x24, 0x98,
	0x63, 0x1b, 0x40, 0x7a, 0xc0, 0xb6, 0x20, 0x71, 0x7b, 0x4d, 0x14, 0x7d, 0x1b, 0xb2, 0xc6, 0x65,
	0xbb, 0x77, 0xce, 0xba, 0xcd, 0x9e, 0x71, 0x4f, 0x92, 0x7a, 0x0e, 0x32, 0xb7, 0x17, 0x4d, 0xa3,
	0x75, 0xd7, 0xbc, 0x27, 0x29, 0x3d, 0x03, 0xea, 0x65, 0xa7, 0x6f, 0x90, 0x2d, 0x3d, 0x0b, 0xe9,
	0x9b, 0x96, 0x71, 0xd7, 0xe9, 0xfd, 0x42, 0xd2, 0x42, 0xf5, 0xf3, 0x55, 0xa7, 0x69, 0xb4, 0x6f,
	0x2e, 0x58, 0xbb, 0x4b, 0x32, 0xe2, 0xde, 0xf9, 0xe5, 0x59, 0x97, 0x68, 0xc7, 0x3f, 0x82, 0xf6,
	0xf4, 0x0e, 0xee, 0x01, 0x39, 0xbb, 0x6a, 0xb7, 0x6e, 0x0c, 0x66, 0x74, 0x58, 0xbf, 0xd5, 0xbb,
	0x6d, 0xf5, 0xc8, 0x2b, 0x81, 0x46, 0xdf, 0x02, 0x8d, 0x78, 0xa2, 0xe8, 0x69, 0x48, 0x36, 0x6f,
	0xee, 0x49, 0xe2, 0xf8, 0x03, 0x80, 0xf4, 0x2a, 0x16, 0x00, 0xce, 0x3e, 0xf6, 0x8d, 0xce, 0x35,
	0x33, 0x9a, 0x17, 0xe4, 0x95, 0x9e, 0x07, 0xed, 0xee, 0xb2, 0x6d, 0xb4, 0xae, 0xda, 0x7d, 0x83,
	0x28, 0xc7, 0x27, 0x90, 0x8e, 0xdf, 0xb3, 0x34, 0x24, 0x3b, 0xb7, 0x7d, 0xf2, 0x4a, 0x7c, 0xb4,
	0xfb, 0x5d, 0xa2, 0xe8, 0x1a, 0xa4, 0xfa, 0xdd, 0xf6, 0x4d, 0x8b, 0x24, 0x04, 0x66, 0x74, 0x7a,
	0x24, 0xf9, 0xd3, 0xfb, 0x5f, 0xdf, 0x8d, 0x9c, 0x70, 0x6c, 0x0e, 0xaa, 0xf3, 0xea, 0xd8, 0x74,
	0x4f, 0x1e, 0xa7, 0x6e, 0xf0, 0x60, 0xba, 0x27, 0x13, 0x3b, 0x10, 0xfb, 0xf7, 0xc4, 0x1f, 0x88,
	0x81, 0xfe, 0x27, 0x00, 0x00, 0xff, 0xff, 0x78, 0xca, 0x10, 0x9e, 0x88, 0x0a, 0x00, 0x00,
}

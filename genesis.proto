syntax = "proto2";

package genesis;
option go_package = "genesis";

service Synchronizer {
    rpc Sync (SyncRequest) returns (SyncResponse) {}
    rpc Push (stream SyncRequest) returns (SyncResponse) {}
}

message SyncRequest {
    optional uint64 version = 1 [default = 0];

    optional PlatformData platform_data = 9;
}

message SyncResponse {
    optional uint64 version = 1 [default = 0];
}

message PlatformData {
    optional Host host = 1;
    repeated Vm vms = 2;
    repeated Vpc vpcs = 3;
    repeated Network networks = 4;
    repeated Subnet subnets = 5;
    repeated Port ports = 6;
    repeated Ip ips = 7;

    optional string raw_hostname = 11;
    optional string raw_all_vm_xml = 12;
    optional string raw_vm_states = 13;
    optional string raw_ovs_interfaces = 14;
    optional string raw_ovs_ports = 15;
    optional string raw_brctl_show = 16;
    optional string raw_vlan_config = 17;
}

message Host {
    optional string hostname = 1;
}

enum VmState {
    OTHER = 0;
    RUNNING = 1;
    PAUSED = 2;
    SHUTOFF = 3;
}

message Vm {
    optional string uuid = 1;
    optional string name = 2;
    optional string label = 3;
    optional string launch_server = 4;
    optional VmState state = 5;

    optional string vpc_uuid = 9;
}

message Vpc {
    optional string uuid = 1;
    optional string name = 2;
}

message Network {
    optional string uuid = 1;
    optional uint32 segmentation_id = 5;
}

message Subnet {
    optional string cidr = 1;
    optional uint32 last_seen = 2;

    optional string network_uuid = 9;
}

message Port {
    optional string uuid = 1;
    optional uint64 mac = 2;
    optional string device_uuid = 4;

    optional string network_uuid = 9;
}

message Ip {
    optional uint32 ip = 1;
    optional uint32 last_seen = 2;
    optional uint64 mac = 3;

    optional string port_uuid = 9;
}

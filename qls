[1;33mdiff --git a/ckissu/ckissu.go b/ckissu/ckissu.go[m
[1;33mindex 7422299..7059d51 100644[m
[1;33m--- a/ckissu/ckissu.go[m
[1;33m+++ b/ckissu/ckissu.go[m
[1;35m@@ -127,7 +127,7 @@[m [mvar ColumnAdd600 = []*ColumnAdds{[m
 	&ColumnAdds{[m
 		Dbs:         []string{"flow_log"},[m
 		Tables:      []string{"l4_flow_log", "l4_flow_log_local"},[m
[1;31m-		ColumnNames: []string{"syn_seq", "syn_ack_seq", "l7_error", "tunnel_tx_mac_0", "tunnel_tx_mac_1", "tunnel_rx_mac_0", "tunnel_rx_mac_1", "last_keepalive_seq_0", "last_keepalive_seq_1"},[m
[1;32m+[m		[1;32mColumnNames: []string{"syn_seq", "syn_ack_seq", "l7_error", "tunnel_tx_mac_0", "tunnel_tx_mac_1", "tunnel_rx_mac_0", "tunnel_rx_mac_1", "last_keepalive_seq", "last_keepalive_ack"},[m
 		ColumnType:  ckdb.UInt32,[m
 	},[m
 	&ColumnAdds{[m
[1;33mdiff --git a/common/const.go b/common/const.go[m
[1;33mindex f52185b..0615731 100644[m
[1;33m--- a/common/const.go[m
[1;33m+++ b/common/const.go[m
[1;35m@@ -1,6 +1,6 @@[m
 package common[m
 [m
 const ([m
[1;31m-	CK_VERSION             = "v6.0.0.12" // Áî®‰∫éË°®Á§∫clickhouseÁöÑË°®ÁâàÊú¨Âè∑[m
[1;32m+[m	[1;32mCK_VERSION             = "v6.0.0.13" // Áî®‰∫éË°®Á§∫clickhouseÁöÑË°®ÁâàÊú¨Âè∑[m
 	DEFAULT_PCAP_DATA_PATH = "/var/lib/pcap"[m
 )[m
[1;33mdiff --git a/go.mod b/go.mod[m
[1;33mindex a64b0e2..cf29ab2 100644[m
[1;33m--- a/go.mod[m
[1;33m+++ b/go.mod[m
[1;35m@@ -14,7 +14,7 @@[m [mrequire ([m
 	github.com/olivere/elastic v6.2.16+incompatible[m
 	github.com/op/go-logging v0.0.0-20160315200505-970db520ece7[m
 	github.com/spf13/cobra v0.0.5[m
[1;31m-	gitlab.yunshan.net/yunshan/droplet-libs v0.0.0-20220216113615-f0de192f33b0[m
[1;32m+[m	[1;32mgitlab.yunshan.net/yunshan/droplet-libs v0.0.0-20220217024125-2dc4e6d7ef49[m
 	gitlab.yunshan.net/yunshan/message v0.0.0-20220117021718-14f42b82fe8e[m
 	golang.org/x/net v0.0.0-20201021035429-f5854403a974[m
 	google.golang.org/genproto v0.0.0-20190626174449-989357319d63 // indirect[m
[1;33mdiff --git a/go.sum b/go.sum[m
[1;33mindex 6b56f97..209aeb7 100644[m
[1;33m--- a/go.sum[m
[1;33m+++ b/go.sum[m
[1;35m@@ -121,8 +121,8 @@[m [mgithub.com/vishvananda/netns v0.0.0-20191106174202-0a2b9b5464df/go.mod h1:JP3t17[m
 github.com/xordataexchange/crypt v0.0.3-0.20170626215501-b2862e3d0a77/go.mod h1:aYKd//L2LvnjZzWKhF00oedf4jCCReLcmhLdhm1A27Q=[m
 github.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=[m
 github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=[m
[1;31m-gitlab.yunshan.net/yunshan/droplet-libs v0.0.0-20220216113615-f0de192f33b0 h1:ElOWXsX00wdSm34aAMUSSDOsYsJBYqYO8zvZFf7MB9s=[m
[1;31m-gitlab.yunshan.net/yunshan/droplet-libs v0.0.0-20220216113615-f0de192f33b0/go.mod h1:sgx4f0Ttrh/QQgtRyWdWEIkIBcZfUgYbe/nkhXNHO54=[m
[1;32m+[m[1;32mgitlab.yunshan.net/yunshan/droplet-libs v0.0.0-20220217024125-2dc4e6d7ef49 h1:FPB+pBnfIbxMg/VsLXYlFyhoNSi+ILDQ6Fz+f6LZPVY=[m
[1;32m+[m[1;32mgitlab.yunshan.net/yunshan/droplet-libs v0.0.0-20220217024125-2dc4e6d7ef49/go.mod h1:sgx4f0Ttrh/QQgtRyWdWEIkIBcZfUgYbe/nkhXNHO54=[m
 gitlab.yunshan.net/yunshan/message v0.0.0-20220117021718-14f42b82fe8e h1:8Cc0Bm4DuMqY5CCGKuVB0kIY0md6BvpsZB9xa6gUq6k=[m
 gitlab.yunshan.net/yunshan/message v0.0.0-20220117021718-14f42b82fe8e/go.mod h1:ewhcn9CoC6hetqkwq2oOZL8KmzRPQ4hUokN0YTVBk8M=[m
 golang.org/x/crypto v0.0.0-20181203042331-505ab145d0a9/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=[m
[1;33mdiff --git a/stream/jsonify/data.go b/stream/jsonify/data.go[m
[1;33mindex 407019f..72abbdc 100644[m
[1;33m--- a/stream/jsonify/data.go[m
[1;33m+++ b/stream/jsonify/data.go[m
[1;35m@@ -215,14 +215,14 @@[m [mfunc (n *NetworkLayer) WriteBlock(block *ckdb.Block) error {[m
 }[m
 [m
 type TransportLayer struct {[m
[1;31m-	ClientPort        uint16 `json:"client_port"`[m
[1;31m-	ServerPort        uint16 `json:"server_port"`[m
[1;31m-	TCPFlagsBit0      uint16 `json:"tcp_flags_bit_0,omitempty"`[m
[1;31m-	TCPFlagsBit1      uint16 `json:"tcp_flags_bit_1,omitempty"`[m
[1;31m-	SynSeq            uint32 `json:"syn_seq"`[m
[1;31m-	SynAckSeq         uint32 `json:"syn_ack_seq"`[m
[1;31m-	LastKeepaliveSeq0 uint32 `json:"last_keepalive_seq_0"`[m
[1;31m-	LastKeepaliveSeq1 uint32 `json:"last_keepalive_seq_1"`[m
[1;32m+[m	[1;32mClientPort       uint16 `json:"client_port"`[m
[1;32m+[m	[1;32mServerPort       uint16 `json:"server_port"`[m
[1;32m+[m	[1;32mTCPFlagsBit0     uint16 `json:"tcp_flags_bit_0,omitempty"`[m
[1;32m+[m	[1;32mTCPFlagsBit1     uint16 `json:"tcp_flags_bit_1,omitempty"`[m
[1;32m+[m	[1;32mSynSeq           uint32 `json:"syn_seq"`[m
[1;32m+[m	[1;32mSynAckSeq        uint32 `json:"syn_ack_seq"`[m
[1;32m+[m	[1;32mLastKeepaliveSeq uint32 `json:"last_keepalive_seq"`[m
[1;32m+[m	[1;32mLastKeepaliveAck uint32 `json:"last_keepalive_ack"`[m
 }[m
 [m
 var TransportLayerColumns = []*ckdb.Column{[m
[1;35m@@ -233,8 +233,8 @@[m [mvar TransportLayerColumns = []*ckdb.Column{[m
 	ckdb.NewColumn("tcp_flags_bit_1", ckdb.UInt16).SetIndex(ckdb.IndexNone),[m
 	ckdb.NewColumn("syn_seq", ckdb.UInt32).SetIndex(ckdb.IndexNone).SetComment("Êè°ÊâãÂåÖÁöÑTCP SEQÂ∫èÂàóÂè∑"),[m
 	ckdb.NewColumn("syn_ack_seq", ckdb.UInt32).SetIndex(ckdb.IndexNone).SetComment("Êè°ÊâãÂõûÂ∫îÂåÖÁöÑTCP SEQÂ∫èÂàóÂè∑"),[m
[1;31m-	ckdb.NewColumn("last_keepalive_seq_0", ckdb.UInt32).SetIndex(ckdb.IndexNone),[m
[1;31m-	ckdb.NewColumn("last_keepalive_seq_1", ckdb.UInt32).SetIndex(ckdb.IndexNone),[m
[1;32m+[m	[1;32mckdb.NewColumn("last_keepalive_seq", ckdb.UInt32).SetIndex(ckdb.IndexNone),[m
[1;32m+[m	[1;32mckdb.NewColumn("last_keepalive_ack", ckdb.UInt32).SetIndex(ckdb.IndexNone),[m
 }[m
 [m
 func (t *TransportLayer) WriteBlock(block *ckdb.Block) error {[m
[1;35m@@ -256,10 +256,10 @@[m [mfunc (t *TransportLayer) WriteBlock(block *ckdb.Block) error {[m
 	if err := block.WriteUInt32(t.SynAckSeq); err != nil {[m
 		return err[m
 	}[m
[1;31m-	if err := block.WriteUInt32(t.LastKeepaliveSeq0); err != nil {[m
[1;32m+[m	[1;32mif err := block.WriteUInt32(t.LastKeepaliveSeq); err != nil {[m
 		return err[m
 	}[m
[1;31m-	if err := block.WriteUInt32(t.LastKeepaliveSeq1); err != nil {[m
[1;32m+[m	[1;32mif err := block.WriteUInt32(t.LastKeepaliveAck); err != nil {[m
 		return err[m
 	}[m
 	return nil[m
[1;35m@@ -851,8 +851,8 @@[m [mfunc (t *TransportLayer) Fill(f *pb.Flow) {[m
 	t.TCPFlagsBit1 = uint16(f.FlowMetricsPeerDst.TCPFlags)[m
 	t.SynSeq = f.SYNSeq[m
 	t.SynAckSeq = f.SYNACKSeq[m
[1;31m-	t.LastKeepaliveSeq0 = f.LastKeepAliveSeq0[m
[1;31m-	t.LastKeepaliveSeq1 = f.LastKeepAliveSeq1[m
[1;32m+[m	[1;32mt.LastKeepaliveSeq = f.LastKeepaliveSeq[m
[1;32m+[m	[1;32mt.LastKeepaliveAck = f.LastKeepaliveAck[m
 }[m
 [m
 func (a *ApplicationLayer) Fill(f *pb.Flow) {[m

syntax = "proto2";

package trident;

service Synchronizer {
    rpc Sync (SyncRequest) returns (SyncResponse) {}
}

message AclStat {
    optional uint32 id = 1 [default = 0];
    optional uint64 packets = 2 [default = 0];
    optional uint64 bytes = 3 [default = 0];
}

message InterfaceAclStat {
    optional string mac = 1;
    repeated AclStat header_acls = 2;
    repeated AclStat packet_acls = 3;
}

message SyncRequest {
    optional uint32 boot_time = 1;
    optional bool config_accepted = 2 [default = true];

    repeated InterfaceAclStat interface_acls = 5;
}

enum Status {
    SUCCESS = 0;
    FAILED = 1;
}

enum TapMode {
    PORT   = 0;
    BRIDGE = 1;
}

message Config {
    optional uint32 max_cpus = 1 [default = 2];
    optional uint32 sync_interval = 2 [default = 10];
    optional uint64 global_pps_threshold = 3 [default = 100000];
    optional string tap_interface_regex = 4;
    optional TapMode tap_mode = 5 [default = PORT];

    optional string output_interface = 10;
    optional uint32 output_vlan = 11 [default = 0];
    optional uint32 mtu = 12 [default = 1500];

    optional string source_mac = 20;
    optional string source_ip = 21;

    optional string analyzer_gw_mac = 30;
    optional string analyzer_ip = 31;
    optional string vtep_gw_mac = 32;
    optional string vtep_ip = 33;
}

enum Protocol {
    ANY = 0;
    TCP = 6;
    UDP = 17;
}

message Acl {
    optional uint32 id = 1 [default = 0];
    optional uint32 ip = 2 [default = 0];
    optional uint32 netmask = 3 [default = 0];
    optional uint32 port = 4 [default = 0];
    optional Protocol protocol = 5;
}

message InterfaceAcl {
    optional uint32 vni = 1;
    optional string mac = 2;
    optional string tap_mac = 3;
    optional uint64 pps_threshold = 4 [default = 0];

    repeated Acl header_acls = 10;
    repeated Acl packet_acls = 11;
}

message Segment { // e.g. single LAN area
    optional uint32 id = 1;
    repeated string mac = 2;
    optional string tap_mac = 3;
}

message SyncResponse {
    optional Status status = 1;
    optional Config config = 2;
    repeated InterfaceAcl interface_acls = 3;
    repeated Segment local_segments = 4;
}
